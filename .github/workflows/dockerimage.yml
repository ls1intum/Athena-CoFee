name: Docker Image CI

on: [push]

jobs:

  athene-load-balancer:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${GITHUB_ACTOR}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      if: github.ref == 'refs/heads/main'
    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        version: '3.20.3'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Compile Protobuf Spec
      working-directory: ./protobuf/
      run: protoc --python_out ../load-balancer/src/ clustering.proto
    - name: Build and Push the athene-load-balancer Docker image
      run: ./.github/workflows/scripts/dockerimage.sh "load-balancer"

  athene-segmentation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${GITHUB_ACTOR}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      if: github.ref == 'refs/heads/main'
    - name: Build and Push the athene-segmentation Docker image
      run: ./.github/workflows/scripts/dockerimage.sh "segmentation"

  athene-embedding:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${GITHUB_ACTOR}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      if: github.ref == 'refs/heads/main'
    - name: Build and Push the athene-embedding Docker image
      run: ./.github/workflows/scripts/dockerimage.sh "embedding"
    - name: Run unittests for embedding-component
      run: docker run -i --rm --entrypoint python ghcr.io/ls1intum/athena/embedding:${GITHUB_REF##*/} -m unittest discover -p test_*.py

  athene-clustering:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${GITHUB_ACTOR}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      if: github.ref == 'refs/heads/main'
    - name: Build and Push the athene-clustering Docker image
      run: ./.github/workflows/scripts/dockerimage.sh "clustering"
    - name: Run unittests for clustering-component
      run: docker run -i --rm --entrypoint python ghcr.io/ls1intum/athena/clustering:${GITHUB_REF##*/} -m unittest discover -p test_*.py

  athene-tracking:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${GITHUB_ACTOR}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      if: github.ref == 'refs/heads/main'
    - name: Build and Push the athene-tracking Docker image
      run: ./.github/workflows/scripts/dockerimage.sh "tracking"
