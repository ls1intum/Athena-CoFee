name: Docker Image CI

on: [push]

jobs:

  athene-segmentation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: azure/docker-login@v1
      with:
        login-server: docker.pkg.github.com
        username: ${GITHUB_ACTOR}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      if: github.ref == 'refs/heads/master'
    - name: Build and Push the athene-segmentation Docker image
      run: ./.github/workflows/scripts/dockerimage.sh "segmentation"

  athene-embedding:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: azure/docker-login@v1
      with:
        login-server: docker.pkg.github.com
        username: ${GITHUB_ACTOR}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      if: github.ref == 'refs/heads/master'
    - name: Build and Push the athene-embedding Docker image
      run: ./.github/workflows/scripts/dockerimage.sh "embedding"
    - name: Run unittests for embedding-component
      run: docker run -i --rm --entrypoint python docker.pkg.github.com/ls1intum/athene/athene-embedding:${GITHUB_REF##*/} -m unittest discover -p test_*.py

  athene-clustering:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: azure/docker-login@v1
      with:
        login-server: docker.pkg.github.com
        username: ${GITHUB_ACTOR}
        password: ${{ secrets.GITHUB_TOKEN }}
    - uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      if: github.ref == 'refs/heads/master'
    - name: Build and Push the athene-clustering Docker image
      run: ./.github/workflows/scripts/dockerimage.sh "clustering"
    - name: Run unittests for clustering-component
      run: docker run -i --rm --entrypoint python docker.pkg.github.com/ls1intum/athene/athene-clustering:${GITHUB_REF##*/} -m unittest discover -p test_*.py
  
  trigger-bamboo:
    needs: [athene-segmentation, athene-embedding, athene-clustering]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/')
    steps:
    - run: |
        BRANCH_PLAN_KEY=curl --user ${{ secrets.BAMBOO_USER }}:${{ secrets.BAMBOO_PASSWORD }} ${{ secrets.BAMBOO_HOST }}/rest/api/latest/plan/${{ secrets.BAMBOO_PLAN }}/branch/${${GITHUB_REF/refs\/heads\//}/\//-} | jq -r  '.key'
        curl -X POST --user ${{ secrets.BAMBOO_USER }}:${{ secrets.BAMBOO_PASSWORD }} ${{ secrets.BAMBOO_HOST }}/rest/api/latest/queue/${BRANCH_PLAN_KEY}?vcsBranch="${GITHUB_REF}"
