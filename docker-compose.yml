version: '3'

services:
# http://localhost:8080/api
# http://localhost:8080/dashboard
  traefik:
    image: traefik:v2.2.1
    container_name: athene-traefik
    depends_on:
      - segmentation
      - embedding
      - clustering
    ports:
      - 8080:8080
      - 80:80
      - 443:443
    networks:
      - athene
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml

# http://localhost/queueStatus
# http://localhost/submit
# http://localhost/getTask
# http://localhost/sendTaskResult
  load-balancer:
    build:
      context: ./load-balancer
    image: athene-load-balancer
    container_name: athene-load-balancer
#    ports:
#      - 8000:8000
    expose:
       - 8000
    environment:
      - CONFIG_FILE_PATH=src/compute_node_config.yml
    working_dir: /usr/src/app
    networks:
      - athene
    volumes:
      - ./load-balance.yml:/usr/src/app/src/compute_node_config.yml:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.balancer.rule=Path(`/queueStatus`,`/submit`,`/getTask`,`/sendTaskResult`)
      - traefik.http.routers.balancer.entrypoints=web
      - traefik.http.routers.balancer-tls.rule=Path(`/queueStatus`,`/submit`,`/getTask`,`/sendTaskResult`)
      - traefik.http.routers.balancer-tls.entrypoints=websecure
      - traefik.http.routers.balancer-tls.tls=true

  segmentation:
    build:
      context: ./segmentation
    image: athene-segmentation
    container_name: athene-segmentation
#    ports:
#      - 8001:8000
    expose:
       - 8000
    environment:
      - BALANCER_QUEUE_FREQUENCY=600
      - BALANCER_GETTASK_URL=http://load-balancer:8000/getTask
      - BALANCER_SENDRESULT_URL=http://load-balancer:8000/sendTaskResult
    working_dir: /usr/src/app
    networks:
      - athene
    labels:
      - traefik.enable=true

# http://localhost/upload
  embedding:
    build:
      context: ./embedding
    image: athene-embedding
    container_name: athene-embedding
#    ports:
#      - 8002:8000
    expose:
       - 8000
    environment:
      - DATABASE_HOST=database
      - DATABASE_PORT=27017
      - DATABASE_NAME=athene_db
      - DATABASE_USER=embedding
      - DATABASE_PWD=embedding_password
      - BALANCER_QUEUE_FREQUENCY=600
      - BALANCER_GETTASK_URL=http://load-balancer:8000/getTask
      - CHUNK_SIZE=50
      - BALANCER_SENDRESULT_URL=http://load-balancer:8000/sendTaskResult
    working_dir: /usr/src/app
    networks:
      - athene
    labels:
      - traefik.enable=true
      - traefik.http.routers.upload.rule=Path(`/upload`)
      - traefik.http.routers.upload.entrypoints=web
      - traefik.http.routers.upload-tls.rule=Path(`/upload`)
      - traefik.http.routers.upload-tls.entrypoints=websecure
      - traefik.http.routers.upload-tls.tls=true

  clustering:
    build:
      context: ./clustering
    image: athene-clustering
    container_name: athene-clustering
#    ports:
#      - 8003:8000
    expose:
       - 8000
    environment:
      - DATABASE_HOST=database
      - DATABASE_PORT=27017
      - DATABASE_NAME=athene_db
      - DATABASE_USER=clustering
      - DATABASE_PWD=clustering_password
      - BALANCER_QUEUE_FREQUENCY=600
      - BALANCER_GETTASK_URL=http://load-balancer:8000/getTask
      - BALANCER_SENDRESULT_URL=http://load-balancer:8000/sendTaskResult
    working_dir: /usr/src/app
    networks:
      - athene
    labels:
      - traefik.enable=true

  database:
    image: mongo:latest
    restart: always
    container_name: athene-mongodb
    expose:
      - 27017
    environment:
      - MONGO_INITDB_DATABASE=athene_db
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root_password
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./data/db:/data/db
    networks:
      - athene

networks:
  athene:
    driver: bridge
