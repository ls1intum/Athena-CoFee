version: '3'

services:
  # http://localhost:9081/api
  # http://localhost:9081/dashboard
  traefik:
    image: traefik:v2.9.6
    command:
      - --api.insecure=true  # Enable the insecure API and dashboard
      - --providers.docker=true
      - --entrypoints.web.address=:80
    container_name: athene-traefik
    restart: unless-stopped
    depends_on:
      # These components have API endpoints managed by traefik
      - load-balancer
      - embedding
      - tracking
    ports:
      - ${TRAEFIK_DASHBOARD_PORT}:8080
      - ${TRAEFIK_HTTP_PORT}:80
      - ${TRAEFIK_HTTPS_PORT}:443
    networks:
      - athene
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.docker.yml:/etc/traefik/traefik.yml

  # http://localhost/queueStatus
  # http://localhost/submit
  # http://localhost/getTask
  # http://localhost/sendTaskResult
  load-balancer:
    build:
      context: .
      dockerfile: ./load-balancer/Dockerfile
    image: athene-load-balancer
    container_name: athene-load-balancer
    restart: unless-stopped
    expose:
       - 8000
    environment:
      - LOAD_BALANCER_CONFIG_FILE_PATH
      - AUTHORIZATION_SECRET
    working_dir: /usr/src/app
    networks:
      - athene
    labels:
      - traefik.enable=true
      - traefik.http.routers.balancer.rule=Path(`/queueStatus`,`/submit`,`/getTask`,`/sendTaskResult`)
      - traefik.http.routers.balancer.entrypoints=web
      - traefik.http.routers.balancer-tls.rule=Path(`/queueStatus`,`/submit`,`/getTask`,`/sendTaskResult`)
      - traefik.http.routers.balancer-tls.entrypoints=websecure
      - traefik.http.routers.balancer-tls.tls=true

  segmentation:
    build:
      context: .
      dockerfile: ./segmentation/Dockerfile
    image: athene-segmentation
    container_name: athene-segmentation
    restart: unless-stopped
    depends_on:
      - load-balancer
    expose:
       - 8000
    environment:
      - AUTHORIZATION_SECRET
      - BALANCER_QUEUE_FREQUENCY
      - BALANCER_GETTASK_URL
      - BALANCER_SENDRESULT_URL
    working_dir: /usr/src/app
    networks:
      - athene
    labels:
      - traefik.enable=true

  # http://localhost/upload
  # http://localhost/feedback_consistency
  embedding:
    build:
      context: .
      dockerfile: ./embedding/Dockerfile
    image: athene-embedding
    container_name: athene-embedding
    restart: unless-stopped
    depends_on:
      - load-balancer
      - database
    expose:
       - 8000
    environment:
      - DATABASE_HOST
      - DATABASE_PORT
      - DATABASE_NAME
      - EMBEDDING_DATABASE_USER
      - EMBEDDING_DATABASE_PWD
      - AUTHORIZATION_SECRET
      - BALANCER_QUEUE_FREQUENCY
      - BALANCER_GETTASK_URL
      - EMBEDDING_CHUNK_SIZE
      - BALANCER_SENDRESULT_URL
    working_dir: /usr/src/app
    volumes:
      - ${EMBEDDING_CLOUD_CONFIG_PATH}:/usr/src/app/src/cloud/config.py:ro
    networks:
      - athene
    labels:
      - traefik.enable=true
      - traefik.http.routers.upload.rule=Path(`/upload`,`/feedback_consistency`)
      - traefik.http.routers.upload.entrypoints=web
      - traefik.http.routers.upload-tls.rule=Path(`/upload`,`/feedback_consistency`)
      - traefik.http.routers.upload-tls.entrypoints=websecure
      - traefik.http.routers.upload-tls.tls=true

  clustering:
    build:
      context: .
      dockerfile: ./clustering/Dockerfile
    image: athene-clustering
    container_name: athene-clustering
    restart: unless-stopped
    depends_on:
      - load-balancer
      - database
    expose:
       - 8000
    environment:
      - DATABASE_HOST
      - DATABASE_PORT
      - DATABASE_NAME
      - CLUSTERING_DATABASE_USER
      - CLUSTERING_DATABASE_PWD
      - AUTHORIZATION_SECRET
      - BALANCER_QUEUE_FREQUENCY
      - BALANCER_GETTASK_URL
      - BALANCER_SENDRESULT_URL
    working_dir: /usr/src/app
    networks:
      - athene
    labels:
      - traefik.enable=true

  # http://localhost/tracking
  tracking:
    build:
      context: .
      dockerfile: ./tracking/Dockerfile
    image: athene-tracking
    container_name: athene-tracking
    restart: unless-stopped
    depends_on:
      - database
    expose:
      - 8000
    environment:
      - AUTHORIZATION_SECRET
      - DATABASE_HOST
      - DATABASE_PORT
      - DATABASE_NAME
      - TRACKING_DATABASE_USER
      - TRACKING_DATABASE_PWD
    working_dir: /usr/src/app
    networks:
      - athene
    labels:
      - traefik.enable=true
      - traefik.http.routers.tracking.rule=PathPrefix(`/tracking`)
      - traefik.http.routers.tracking.entrypoints=web
      - traefik.http.routers.tracking-tls.rule=PathPrefix(`/tracking`)
      - traefik.http.routers.tracking-tls.entrypoints=websecure
      - traefik.http.routers.tracking-tls.tls=true

  database:
    image: mongo:latest
    container_name: athene-mongodb
    restart: unless-stopped
    expose:
      - 27017
    environment:
      - MONGO_INITDB_DATABASE=${DATABASE_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${DATABASE_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./data/db:/data/db
    networks:
      - athene

networks:
  athene:
    driver: bridge
