version: '3'

services:

# http://localhost:8000/segment
  segmentation:
    build:
      context: ./segmentation
    image: athene-segmentation
    container_name: athene-segmentation
    ports:
      - 8000:8000
    working_dir: /usr/src/app
    networks:
      - athene

# http://localhost:8001/embed
# http://localhost:8001/upload
  embedding:
    build:
      context: ./embedding
    image: athene-embedding
    container_name: athene-embedding
    ports:
      - 8001:8000
    working_dir: /usr/src/app
    networks:
      - athene

# http://localhost:8002/cluster
  clustering:
    build:
      context: ./clustering
    image: athene-clustering
    container_name: athene-clustering
    ports:
      - 8002:8000
    working_dir: /usr/src/app
    networks:
      - athene

# http://localhost:8003/tracking
  tracking:
    build:
      context: tracking
    image: athene-tracking
    container_name: athene-tracking
    ports:
      - 8003:80
    environment:
      - JWT_SECRET_BASE64=YWVuaXF1YWRpNWNlaXJpNmFlbTZkb283dXphaVF1b29oM3J1MWNoYWlyNHRoZWUzb2huZ2FpM211bGVlM0VpcAo=
    working_dir: /usr/src/app
    depends_on:
      - database
    networks:
      - athene

  database:
    image: mongo:latest
    restart: always
    container_name: athene-mongodb
    expose:
      - 27017
    environment:
      - MONGO_INITDB_DATABASE=athene_db
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root_password
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./data/db:/data/db
    networks:
      - athene

networks:
  athene:
    driver: bridge
